<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>org.sqljson</groupId>
   <artifactId>dagen</artifactId>
   <version>1.5.3</version>
   <name>data access generator</name>
   <description>Generate hierarchical SQL/JSON queries, SQL modification statements, and matching types.</description>

   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
      <jackson.version>2.14.0-rc1</jackson.version>
      <pg.version>42.7.2</pg.version>
      <checkerFrameworkVersion>3.1.1</checkerFrameworkVersion>
   </properties>

   <dependencies>
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-databind</artifactId>
         <version>${jackson.version}</version>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.dataformat</groupId>
         <artifactId>jackson-dataformat-yaml</artifactId>
         <version>${jackson.version}</version>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.datatype</groupId>
         <artifactId>jackson-datatype-jdk8</artifactId>
         <version>${jackson.version}</version>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.module</groupId>
         <artifactId>jackson-module-jsonSchema</artifactId>
         <version>${jackson.version}</version>
      </dependency>
      <dependency>
         <groupId>org.postgresql</groupId>
         <artifactId>postgresql</artifactId>
         <version>${pg.version}</version>
      </dependency>
      <dependency>
         <groupId>com.oracle.ojdbc</groupId>
         <artifactId>ojdbc8</artifactId>
         <version>19.3.0.0</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter</artifactId>
         <version>5.5.2</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>commons-io</groupId>
         <artifactId>commons-io</artifactId>
         <version>2.14.0</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-jdbc</artifactId>
         <version>5.2.2.RELEASE</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.checkerframework</groupId>
         <artifactId>checker-qual</artifactId>
         <version>3.1.1</version>
      </dependency>
      <dependency>
         <groupId>com.google.code.findbugs</groupId>
         <artifactId>annotations</artifactId>
         <version>3.0.1</version>
      </dependency>
   </dependencies>

   <build>
      <finalName>dagen</finalName>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.1</version>
            <configuration>
               <fork>true</fork>
               <release>11</release>
               <compilerArguments>
                  <Xmaxerrs>10000</Xmaxerrs>
                  <Xmaxwarns>10000</Xmaxwarns>
               </compilerArguments>
               <showWarnings>true</showWarnings>
               <annotationProcessorPaths>
                  <path>
                     <groupId>org.checkerframework</groupId>
                     <artifactId>checker</artifactId>
                     <version>${checkerFrameworkVersion}</version>
                  </path>
               </annotationProcessorPaths>
               <annotationProcessors>
                  <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
               </annotationProcessors>
               <compilerArgs>
                  <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                  <arg>-Alint</arg>
               </compilerArgs>
            </configuration>
         </plugin>
         <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.22.2</version>
         </plugin>
         <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.22.2</version>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>3.2.0</version>
            <configuration>
               <descriptorRefs>
                  <descriptorRef>jar-with-dependencies</descriptorRef>
               </descriptorRefs>
               <appendAssemblyId>false</appendAssemblyId>
            </configuration>
            <executions>
               <execution>
                  <id>make-assembly</id>
                  <phase>package</phase>
                  <goals>
                     <goal>single</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.2.1</version>
            <executions>
               <execution>
                  <goals>
                     <goal>jar</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <version>3.1.0</version>
            <configuration>
               <filesets>
                  <fileset>
                     <directory>src/test/java/generated</directory>
                     <includes>
                        <include>**/*.java</include>
                     </includes>
                  </fileset>
                  <fileset>
                     <directory>src/test/resources/generated</directory>
                     <includes>
                        <include>**/*.sql</include>
                     </includes>
                  </fileset>
               </filesets>
            </configuration>
         </plugin>
         <!-- Generate TypeScript type definitions for query/mod spec types.
              https://github.com/vojtechhabarta/typescript-generator -->
         <plugin>
            <groupId>cz.habarta.typescript-generator</groupId>
            <artifactId>typescript-generator-maven-plugin</artifactId>
            <version>2.26.723</version>
            <executions>
               <execution>
                  <id>generate-ts-spec-types</id>
                  <goals>
                     <goal>generate</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <jsonLibrary>jackson2</jsonLibrary>
               <classPatterns>
                  <classPattern>org.sqljson.query_specs.**</classPattern>
                  <classPattern>org.sqljson.mod_stmts.specs.**</classPattern>
                  <classPattern>org.sqljson.common.specs.**</classPattern>
               </classPatterns>
               <excludeClassPatterns>
                  <excludeClassPattern>**.*Exception</excludeClassPattern>
                  <excludeClassPattern>**.*Deserializer</excludeClassPattern>
               </excludeClassPatterns>
               <nullableAnnotations>
                  <nullableAnnotation>org.checkerframework.checker.nullness.qual.Nullable</nullableAnnotation>
               </nullableAnnotations>
               <nullabilityDefinition>nullAndUndefinedUnion</nullabilityDefinition>
               <customTypeAliases>
                  <customTypeAlias>TableFieldExpr:{field?: string; expression?: string; withTableAliasAs?: string; jsonProperty?: string; fieldTypeInGeneratedSource?: string;}</customTypeAlias>
               </customTypeAliases>
               <customTypeMappings>
                  <!-- Allow simple string to be used for TableFieldExpr as allowed by custom deserializer. -->
                  <mapping>org.sqljson.query_specs.TableFieldExpr:(string | TableFieldExpr)</mapping>
                </customTypeMappings>
               <outputKind>module</outputKind>
               <outputFileType>implementationFile</outputFileType>
               <outputFile>${project.build.directory}/spec-types.ts</outputFile>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>versions-maven-plugin</artifactId>
            <version>2.7</version>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>3.0.0-M3</version>
            <executions>
               <execution>
                  <id>enforce-maven</id>
                  <goals>
                     <goal>enforce</goal>
                  </goals>
                  <configuration>
                     <rules>
                        <requireMavenVersion>
                           <version>3.6</version>
                        </requireMavenVersion>
                     </rules>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <!-- General exec:java for running query generation. Example run:
         ./mvn exec:java@queries -Dlang=Java -Dpkg="my.app" -Ddbmd="example/output/pg/dbmd-pg.yaml" -Dspecs="example/query-specs-java.yaml" -DtypesDir="../../tmp" -DsqlDir="../../tmp"
         -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
               <execution>
                  <id>dbmd</id>
                  <configuration>
                     <mainClass>org.sqljson.DatabaseMetadataGeneratorMain</mainClass>
                     <arguments>
                        <argument>${propsFile}</argument>
                        <argument>${outputFile}</argument>
                     </arguments>
                  </configuration>
               </execution>
               <execution>
                  <id>queries</id>
                  <configuration>
                     <mainClass>org.sqljson.QueryGeneratorMain</mainClass>
                     <arguments>
                        <argument>--types-language:${lang}</argument>
                        <argument>--package:${pkg}</argument>
                        <argument>${dbmd}</argument>
                        <arguement>${specs}</arguement>
                        <argument>${typesDir}</argument>
                        <argument>${sqlDir}</argument>
                     </arguments>
                  </configuration>
               </execution>
               <execution>
                  <id>gen-test-queries</id>
                  <phase>generate-test-sources</phase>
                  <goals>
                     <goal>java</goal>
                  </goals>
                  <configuration>
                     <additionalClasspathElements>
                        <classpathElement>${project.build.outputDirectory}</classpathElement>
                     </additionalClasspathElements>
                     <mainClass>org.sqljson.QueryGeneratorMain</mainClass>
                     <arguments>
                        <argument>--types-language:Java</argument>
                        <argument>--package:generated.query</argument>
                        <argument>${project.basedir}/src/test/resources/dbmd-pg.yaml</argument>
                        <arguement>${project.basedir}/src/test/resources/query-specs.yaml</arguement>
                        <argument>${project.basedir}/src/test/java</argument>
                        <argument>${project.basedir}/src/test/resources/generated/query-sql</argument>
                     </arguments>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
</project>
